/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

/** ArithmeticError: arithmetic error */
export const TENSOR_MARKETPLACE_ERROR__ARITHMETIC_ERROR = 0x32c8; // 13000
/** ExpiryTooLarge: expiry too large */
export const TENSOR_MARKETPLACE_ERROR__EXPIRY_TOO_LARGE = 0x32c9; // 13001
/** BadOwner: bad owner */
export const TENSOR_MARKETPLACE_ERROR__BAD_OWNER = 0x32ca; // 13002
/** BadListState: bad list state */
export const TENSOR_MARKETPLACE_ERROR__BAD_LIST_STATE = 0x32cb; // 13003
/** BadRoyaltiesPct: royalties pct must be between 0 and 100 */
export const TENSOR_MARKETPLACE_ERROR__BAD_ROYALTIES_PCT = 0x32cc; // 13004
/** PriceMismatch: price mismatch */
export const TENSOR_MARKETPLACE_ERROR__PRICE_MISMATCH = 0x32cd; // 13005
/** CreatorMismatch: creator mismatch */
export const TENSOR_MARKETPLACE_ERROR__CREATOR_MISMATCH = 0x32ce; // 13006
/** InsufficientBalance: insufficient balance */
export const TENSOR_MARKETPLACE_ERROR__INSUFFICIENT_BALANCE = 0x32cf; // 13007
/** BidExpired: bid has expired */
export const TENSOR_MARKETPLACE_ERROR__BID_EXPIRED = 0x32d0; // 13008
/** TakerNotAllowed: taker not allowed */
export const TENSOR_MARKETPLACE_ERROR__TAKER_NOT_ALLOWED = 0x32d1; // 13009
/** BadBidField: cannot pass bid field */
export const TENSOR_MARKETPLACE_ERROR__BAD_BID_FIELD = 0x32d2; // 13010
/** BidNotYetExpired: bid not yet expired */
export const TENSOR_MARKETPLACE_ERROR__BID_NOT_YET_EXPIRED = 0x32d3; // 13011
/** BadMargin: bad margin */
export const TENSOR_MARKETPLACE_ERROR__BAD_MARGIN = 0x32d4; // 13012
/** WrongIxForBidTarget: wrong ix for bid target called */
export const TENSOR_MARKETPLACE_ERROR__WRONG_IX_FOR_BID_TARGET = 0x32d5; // 13013
/** WrongTargetId: wrong target id */
export const TENSOR_MARKETPLACE_ERROR__WRONG_TARGET_ID = 0x32d6; // 13014
/** MissingFvc: creator array missing first verified creator */
export const TENSOR_MARKETPLACE_ERROR__MISSING_FVC = 0x32d7; // 13015
/** MissingCollection: metadata missing collection */
export const TENSOR_MARKETPLACE_ERROR__MISSING_COLLECTION = 0x32d8; // 13016
/** CannotModifyTarget: cannot modify bid target, create a new bid */
export const TENSOR_MARKETPLACE_ERROR__CANNOT_MODIFY_TARGET = 0x32d9; // 13017
/** TargetIdMustEqualBidId: target id and bid id must be the same for single bids */
export const TENSOR_MARKETPLACE_ERROR__TARGET_ID_MUST_EQUAL_BID_ID = 0x32da; // 13018
/** CurrencyNotYetEnabled: currency not yet enabled */
export const TENSOR_MARKETPLACE_ERROR__CURRENCY_NOT_YET_ENABLED = 0x32db; // 13019
/** MakerBrokerNotYetEnabled: maker broker not yet enabled */
export const TENSOR_MARKETPLACE_ERROR__MAKER_BROKER_NOT_YET_ENABLED = 0x32dc; // 13020
/** OptionalRoyaltiesNotYetEnabled: optional royalties not yet enabled */
export const TENSOR_MARKETPLACE_ERROR__OPTIONAL_ROYALTIES_NOT_YET_ENABLED = 0x32dd; // 13021
/** WrongStateVersion: wrong state version */
export const TENSOR_MARKETPLACE_ERROR__WRONG_STATE_VERSION = 0x32de; // 13022
/** WrongBidFieldId: wrong field id */
export const TENSOR_MARKETPLACE_ERROR__WRONG_BID_FIELD_ID = 0x32df; // 13023
/** BrokerMismatch: broker mismatch */
export const TENSOR_MARKETPLACE_ERROR__BROKER_MISMATCH = 0x32e0; // 13024
/** AssetIdMismatch: asset id mismatch */
export const TENSOR_MARKETPLACE_ERROR__ASSET_ID_MISMATCH = 0x32e1; // 13025
/** ListingExpired: listing has expired */
export const TENSOR_MARKETPLACE_ERROR__LISTING_EXPIRED = 0x32e2; // 13026
/** ListingNotYetExpired: listing not yet expired */
export const TENSOR_MARKETPLACE_ERROR__LISTING_NOT_YET_EXPIRED = 0x32e3; // 13027
/** BadQuantity: bad quantity passed in */
export const TENSOR_MARKETPLACE_ERROR__BAD_QUANTITY = 0x32e4; // 13028
/** BidFullyFilled: bid fully filled */
export const TENSOR_MARKETPLACE_ERROR__BID_FULLY_FILLED = 0x32e5; // 13029
/** BadWhitelist: bad whitelist */
export const TENSOR_MARKETPLACE_ERROR__BAD_WHITELIST = 0x32e6; // 13030
/** ForbiddenCollection: forbidden collection */
export const TENSOR_MARKETPLACE_ERROR__FORBIDDEN_COLLECTION = 0x32e7; // 13031
/** BadCosigner: bad cosigner */
export const TENSOR_MARKETPLACE_ERROR__BAD_COSIGNER = 0x32e8; // 13032
/** BadMintProof: bad mint proof */
export const TENSOR_MARKETPLACE_ERROR__BAD_MINT_PROOF = 0x32e9; // 13033
/** CurrencyMismatch: Currency mismatch */
export const TENSOR_MARKETPLACE_ERROR__CURRENCY_MISMATCH = 0x32ea; // 13034
/** BidBalanceNotEmptied: The bid balance was not emptied */
export const TENSOR_MARKETPLACE_ERROR__BID_BALANCE_NOT_EMPTIED = 0x32eb; // 13035
/** BadRentDest: Bad rent dest. */
export const TENSOR_MARKETPLACE_ERROR__BAD_RENT_DEST = 0x32ec; // 13036
/** CurrencyNotYetWhitelisted: currency not yet whitelisted */
export const TENSOR_MARKETPLACE_ERROR__CURRENCY_NOT_YET_WHITELISTED = 0x32ed; // 13037
/** MakerBrokerNotYetWhitelisted: maker broker not yet whitelisted */
export const TENSOR_MARKETPLACE_ERROR__MAKER_BROKER_NOT_YET_WHITELISTED = 0x32ee; // 13038
/** WrongTokenRecordDerivation: token record derivation is wrong */
export const TENSOR_MARKETPLACE_ERROR__WRONG_TOKEN_RECORD_DERIVATION = 0x32ef; // 13039
/** InvalidFeeAccount: invalid fee account */
export const TENSOR_MARKETPLACE_ERROR__INVALID_FEE_ACCOUNT = 0x32f0; // 13040
/** InsufficientRemainingAccounts: insufficient remaining accounts */
export const TENSOR_MARKETPLACE_ERROR__INSUFFICIENT_REMAINING_ACCOUNTS = 0x32f1; // 13041
/** MissingBroker: missing broker account */
export const TENSOR_MARKETPLACE_ERROR__MISSING_BROKER = 0x32f2; // 13042
/** MissingBrokerTokenAccount: missing broker token account */
export const TENSOR_MARKETPLACE_ERROR__MISSING_BROKER_TOKEN_ACCOUNT = 0x32f3; // 13043
/** InvalidTokenAccount: invalidtoken account */
export const TENSOR_MARKETPLACE_ERROR__INVALID_TOKEN_ACCOUNT = 0x32f4; // 13044

export type TensorMarketplaceError =
  | typeof TENSOR_MARKETPLACE_ERROR__ARITHMETIC_ERROR
  | typeof TENSOR_MARKETPLACE_ERROR__ASSET_ID_MISMATCH
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_BID_FIELD
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_COSIGNER
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_LIST_STATE
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_MARGIN
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_MINT_PROOF
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_OWNER
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_QUANTITY
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_RENT_DEST
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_ROYALTIES_PCT
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_WHITELIST
  | typeof TENSOR_MARKETPLACE_ERROR__BID_BALANCE_NOT_EMPTIED
  | typeof TENSOR_MARKETPLACE_ERROR__BID_EXPIRED
  | typeof TENSOR_MARKETPLACE_ERROR__BID_FULLY_FILLED
  | typeof TENSOR_MARKETPLACE_ERROR__BID_NOT_YET_EXPIRED
  | typeof TENSOR_MARKETPLACE_ERROR__BROKER_MISMATCH
  | typeof TENSOR_MARKETPLACE_ERROR__CANNOT_MODIFY_TARGET
  | typeof TENSOR_MARKETPLACE_ERROR__CREATOR_MISMATCH
  | typeof TENSOR_MARKETPLACE_ERROR__CURRENCY_MISMATCH
  | typeof TENSOR_MARKETPLACE_ERROR__CURRENCY_NOT_YET_ENABLED
  | typeof TENSOR_MARKETPLACE_ERROR__CURRENCY_NOT_YET_WHITELISTED
  | typeof TENSOR_MARKETPLACE_ERROR__EXPIRY_TOO_LARGE
  | typeof TENSOR_MARKETPLACE_ERROR__FORBIDDEN_COLLECTION
  | typeof TENSOR_MARKETPLACE_ERROR__INSUFFICIENT_BALANCE
  | typeof TENSOR_MARKETPLACE_ERROR__INSUFFICIENT_REMAINING_ACCOUNTS
  | typeof TENSOR_MARKETPLACE_ERROR__INVALID_FEE_ACCOUNT
  | typeof TENSOR_MARKETPLACE_ERROR__INVALID_TOKEN_ACCOUNT
  | typeof TENSOR_MARKETPLACE_ERROR__LISTING_EXPIRED
  | typeof TENSOR_MARKETPLACE_ERROR__LISTING_NOT_YET_EXPIRED
  | typeof TENSOR_MARKETPLACE_ERROR__MAKER_BROKER_NOT_YET_ENABLED
  | typeof TENSOR_MARKETPLACE_ERROR__MAKER_BROKER_NOT_YET_WHITELISTED
  | typeof TENSOR_MARKETPLACE_ERROR__MISSING_BROKER
  | typeof TENSOR_MARKETPLACE_ERROR__MISSING_BROKER_TOKEN_ACCOUNT
  | typeof TENSOR_MARKETPLACE_ERROR__MISSING_COLLECTION
  | typeof TENSOR_MARKETPLACE_ERROR__MISSING_FVC
  | typeof TENSOR_MARKETPLACE_ERROR__OPTIONAL_ROYALTIES_NOT_YET_ENABLED
  | typeof TENSOR_MARKETPLACE_ERROR__PRICE_MISMATCH
  | typeof TENSOR_MARKETPLACE_ERROR__TAKER_NOT_ALLOWED
  | typeof TENSOR_MARKETPLACE_ERROR__TARGET_ID_MUST_EQUAL_BID_ID
  | typeof TENSOR_MARKETPLACE_ERROR__WRONG_BID_FIELD_ID
  | typeof TENSOR_MARKETPLACE_ERROR__WRONG_IX_FOR_BID_TARGET
  | typeof TENSOR_MARKETPLACE_ERROR__WRONG_STATE_VERSION
  | typeof TENSOR_MARKETPLACE_ERROR__WRONG_TARGET_ID
  | typeof TENSOR_MARKETPLACE_ERROR__WRONG_TOKEN_RECORD_DERIVATION;

let tensorMarketplaceErrorMessages:
  | Record<TensorMarketplaceError, string>
  | undefined;
if (__DEV__) {
  tensorMarketplaceErrorMessages = {
    [TENSOR_MARKETPLACE_ERROR__ARITHMETIC_ERROR]: `arithmetic error`,
    [TENSOR_MARKETPLACE_ERROR__ASSET_ID_MISMATCH]: `asset id mismatch`,
    [TENSOR_MARKETPLACE_ERROR__BAD_BID_FIELD]: `cannot pass bid field`,
    [TENSOR_MARKETPLACE_ERROR__BAD_COSIGNER]: `bad cosigner`,
    [TENSOR_MARKETPLACE_ERROR__BAD_LIST_STATE]: `bad list state`,
    [TENSOR_MARKETPLACE_ERROR__BAD_MARGIN]: `bad margin`,
    [TENSOR_MARKETPLACE_ERROR__BAD_MINT_PROOF]: `bad mint proof`,
    [TENSOR_MARKETPLACE_ERROR__BAD_OWNER]: `bad owner`,
    [TENSOR_MARKETPLACE_ERROR__BAD_QUANTITY]: `bad quantity passed in`,
    [TENSOR_MARKETPLACE_ERROR__BAD_RENT_DEST]: `Bad rent dest.`,
    [TENSOR_MARKETPLACE_ERROR__BAD_ROYALTIES_PCT]: `royalties pct must be between 0 and 100`,
    [TENSOR_MARKETPLACE_ERROR__BAD_WHITELIST]: `bad whitelist`,
    [TENSOR_MARKETPLACE_ERROR__BID_BALANCE_NOT_EMPTIED]: `The bid balance was not emptied`,
    [TENSOR_MARKETPLACE_ERROR__BID_EXPIRED]: `bid has expired`,
    [TENSOR_MARKETPLACE_ERROR__BID_FULLY_FILLED]: `bid fully filled`,
    [TENSOR_MARKETPLACE_ERROR__BID_NOT_YET_EXPIRED]: `bid not yet expired`,
    [TENSOR_MARKETPLACE_ERROR__BROKER_MISMATCH]: `broker mismatch`,
    [TENSOR_MARKETPLACE_ERROR__CANNOT_MODIFY_TARGET]: `cannot modify bid target, create a new bid`,
    [TENSOR_MARKETPLACE_ERROR__CREATOR_MISMATCH]: `creator mismatch`,
    [TENSOR_MARKETPLACE_ERROR__CURRENCY_MISMATCH]: `Currency mismatch`,
    [TENSOR_MARKETPLACE_ERROR__CURRENCY_NOT_YET_ENABLED]: `currency not yet enabled`,
    [TENSOR_MARKETPLACE_ERROR__CURRENCY_NOT_YET_WHITELISTED]: `currency not yet whitelisted`,
    [TENSOR_MARKETPLACE_ERROR__EXPIRY_TOO_LARGE]: `expiry too large`,
    [TENSOR_MARKETPLACE_ERROR__FORBIDDEN_COLLECTION]: `forbidden collection`,
    [TENSOR_MARKETPLACE_ERROR__INSUFFICIENT_BALANCE]: `insufficient balance`,
    [TENSOR_MARKETPLACE_ERROR__INSUFFICIENT_REMAINING_ACCOUNTS]: `insufficient remaining accounts`,
    [TENSOR_MARKETPLACE_ERROR__INVALID_FEE_ACCOUNT]: `invalid fee account`,
    [TENSOR_MARKETPLACE_ERROR__INVALID_TOKEN_ACCOUNT]: `invalidtoken account`,
    [TENSOR_MARKETPLACE_ERROR__LISTING_EXPIRED]: `listing has expired`,
    [TENSOR_MARKETPLACE_ERROR__LISTING_NOT_YET_EXPIRED]: `listing not yet expired`,
    [TENSOR_MARKETPLACE_ERROR__MAKER_BROKER_NOT_YET_ENABLED]: `maker broker not yet enabled`,
    [TENSOR_MARKETPLACE_ERROR__MAKER_BROKER_NOT_YET_WHITELISTED]: `maker broker not yet whitelisted`,
    [TENSOR_MARKETPLACE_ERROR__MISSING_BROKER]: `missing broker account`,
    [TENSOR_MARKETPLACE_ERROR__MISSING_BROKER_TOKEN_ACCOUNT]: `missing broker token account`,
    [TENSOR_MARKETPLACE_ERROR__MISSING_COLLECTION]: `metadata missing collection`,
    [TENSOR_MARKETPLACE_ERROR__MISSING_FVC]: `creator array missing first verified creator`,
    [TENSOR_MARKETPLACE_ERROR__OPTIONAL_ROYALTIES_NOT_YET_ENABLED]: `optional royalties not yet enabled`,
    [TENSOR_MARKETPLACE_ERROR__PRICE_MISMATCH]: `price mismatch`,
    [TENSOR_MARKETPLACE_ERROR__TAKER_NOT_ALLOWED]: `taker not allowed`,
    [TENSOR_MARKETPLACE_ERROR__TARGET_ID_MUST_EQUAL_BID_ID]: `target id and bid id must be the same for single bids`,
    [TENSOR_MARKETPLACE_ERROR__WRONG_BID_FIELD_ID]: `wrong field id`,
    [TENSOR_MARKETPLACE_ERROR__WRONG_IX_FOR_BID_TARGET]: `wrong ix for bid target called`,
    [TENSOR_MARKETPLACE_ERROR__WRONG_STATE_VERSION]: `wrong state version`,
    [TENSOR_MARKETPLACE_ERROR__WRONG_TARGET_ID]: `wrong target id`,
    [TENSOR_MARKETPLACE_ERROR__WRONG_TOKEN_RECORD_DERIVATION]: `token record derivation is wrong`,
  };
}

export function getTensorMarketplaceErrorMessage(
  code: TensorMarketplaceError
): string {
  if (__DEV__) {
    return (
      tensorMarketplaceErrorMessages as Record<TensorMarketplaceError, string>
    )[code];
  }

  return 'Error message not available in production bundles. Compile with `__DEV__` set to true to see more information.';
}
