/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

/** ArithmeticError: arithmetic error */
export const TENSOR_MARKETPLACE_ERROR__ARITHMETIC_ERROR = 0x1b58; // 7000
/** ExpiryTooLarge: expiry too large */
export const TENSOR_MARKETPLACE_ERROR__EXPIRY_TOO_LARGE = 0x1b59; // 7001
/** BadOwner: bad owner */
export const TENSOR_MARKETPLACE_ERROR__BAD_OWNER = 0x1b5a; // 7002
/** BadListState: bad list state */
export const TENSOR_MARKETPLACE_ERROR__BAD_LIST_STATE = 0x1b5b; // 7003
/** BadRoyaltiesPct: royalties pct must be between 0 and 100 */
export const TENSOR_MARKETPLACE_ERROR__BAD_ROYALTIES_PCT = 0x1b5c; // 7004
/** PriceMismatch: price mismatch */
export const TENSOR_MARKETPLACE_ERROR__PRICE_MISMATCH = 0x1b5d; // 7005
/** CreatorMismatch: creator mismatch */
export const TENSOR_MARKETPLACE_ERROR__CREATOR_MISMATCH = 0x1b5e; // 7006
/** InsufficientBalance: insufficient balance */
export const TENSOR_MARKETPLACE_ERROR__INSUFFICIENT_BALANCE = 0x1b5f; // 7007
/** BidExpired: bid has expired */
export const TENSOR_MARKETPLACE_ERROR__BID_EXPIRED = 0x1b60; // 7008
/** TakerNotAllowed: taker not allowed */
export const TENSOR_MARKETPLACE_ERROR__TAKER_NOT_ALLOWED = 0x1b61; // 7009
/** BadBidField: cannot pass bid field */
export const TENSOR_MARKETPLACE_ERROR__BAD_BID_FIELD = 0x1b62; // 7010
/** BidNotYetExpired: bid not yet expired */
export const TENSOR_MARKETPLACE_ERROR__BID_NOT_YET_EXPIRED = 0x1b63; // 7011
/** BadMargin: bad margin */
export const TENSOR_MARKETPLACE_ERROR__BAD_MARGIN = 0x1b64; // 7012
/** WrongIxForBidTarget: wrong ix for bid target called */
export const TENSOR_MARKETPLACE_ERROR__WRONG_IX_FOR_BID_TARGET = 0x1b65; // 7013
/** WrongTargetId: wrong target id */
export const TENSOR_MARKETPLACE_ERROR__WRONG_TARGET_ID = 0x1b66; // 7014
/** MissingFvc: creator array missing first verified creator */
export const TENSOR_MARKETPLACE_ERROR__MISSING_FVC = 0x1b67; // 7015
/** MissingCollection: metadata missing collection */
export const TENSOR_MARKETPLACE_ERROR__MISSING_COLLECTION = 0x1b68; // 7016
/** CannotModifyTarget: cannot modify bid target, create a new bid */
export const TENSOR_MARKETPLACE_ERROR__CANNOT_MODIFY_TARGET = 0x1b69; // 7017
/** TargetIdMustEqualBidId: target id and bid id must be the same for single bids */
export const TENSOR_MARKETPLACE_ERROR__TARGET_ID_MUST_EQUAL_BID_ID = 0x1b6a; // 7018
/** CurrencyNotYetEnabled: currency not yet enabled */
export const TENSOR_MARKETPLACE_ERROR__CURRENCY_NOT_YET_ENABLED = 0x1b6b; // 7019
/** MakerBrokerNotYetEnabled: maker broker not yet enabled */
export const TENSOR_MARKETPLACE_ERROR__MAKER_BROKER_NOT_YET_ENABLED = 0x1b6c; // 7020
/** OptionalRoyaltiesNotYetEnabled: optional royalties not yet enabled */
export const TENSOR_MARKETPLACE_ERROR__OPTIONAL_ROYALTIES_NOT_YET_ENABLED = 0x1b6d; // 7021
/** WrongStateVersion: wrong state version */
export const TENSOR_MARKETPLACE_ERROR__WRONG_STATE_VERSION = 0x1b6e; // 7022
/** WrongBidFieldId: wrong field id */
export const TENSOR_MARKETPLACE_ERROR__WRONG_BID_FIELD_ID = 0x1b6f; // 7023
/** BrokerMismatch: broker mismatch */
export const TENSOR_MARKETPLACE_ERROR__BROKER_MISMATCH = 0x1b70; // 7024
/** AssetIdMismatch: asset id mismatch */
export const TENSOR_MARKETPLACE_ERROR__ASSET_ID_MISMATCH = 0x1b71; // 7025
/** ListingExpired: listing has expired */
export const TENSOR_MARKETPLACE_ERROR__LISTING_EXPIRED = 0x1b72; // 7026
/** ListingNotYetExpired: listing not yet expired */
export const TENSOR_MARKETPLACE_ERROR__LISTING_NOT_YET_EXPIRED = 0x1b73; // 7027
/** BadQuantity: bad quantity passed in */
export const TENSOR_MARKETPLACE_ERROR__BAD_QUANTITY = 0x1b74; // 7028
/** BidFullyFilled: bid fully filled */
export const TENSOR_MARKETPLACE_ERROR__BID_FULLY_FILLED = 0x1b75; // 7029
/** BadWhitelist: bad whitelist */
export const TENSOR_MARKETPLACE_ERROR__BAD_WHITELIST = 0x1b76; // 7030
/** ForbiddenCollection: forbidden collection */
export const TENSOR_MARKETPLACE_ERROR__FORBIDDEN_COLLECTION = 0x1b77; // 7031
/** BadCosigner: bad cosigner */
export const TENSOR_MARKETPLACE_ERROR__BAD_COSIGNER = 0x1b78; // 7032
/** BadMintProof: bad mint proof */
export const TENSOR_MARKETPLACE_ERROR__BAD_MINT_PROOF = 0x1b79; // 7033
/** CurrencyMismatch: Currency mismatch */
export const TENSOR_MARKETPLACE_ERROR__CURRENCY_MISMATCH = 0x1b7a; // 7034
/** BidBalanceNotEmptied: The bid balance was not emptied */
export const TENSOR_MARKETPLACE_ERROR__BID_BALANCE_NOT_EMPTIED = 0x1b7b; // 7035
/** BadRentDest: Bad rent dest. */
export const TENSOR_MARKETPLACE_ERROR__BAD_RENT_DEST = 0x1b7c; // 7036
/** CurrencyNotYetWhitelisted: currency not yet whitelisted */
export const TENSOR_MARKETPLACE_ERROR__CURRENCY_NOT_YET_WHITELISTED = 0x1b7d; // 7037
/** MakerBrokerNotYetWhitelisted: maker broker not yet whitelisted */
export const TENSOR_MARKETPLACE_ERROR__MAKER_BROKER_NOT_YET_WHITELISTED = 0x1b7e; // 7038
/** WrongTokenRecordDerivation: token record derivation is wrong */
export const TENSOR_MARKETPLACE_ERROR__WRONG_TOKEN_RECORD_DERIVATION = 0x1b7f; // 7039
/** InvalidFeeAccount: invalid fee account */
export const TENSOR_MARKETPLACE_ERROR__INVALID_FEE_ACCOUNT = 0x1b80; // 7040
/** InsufficientRemainingAccounts: insufficient remaining accounts */
export const TENSOR_MARKETPLACE_ERROR__INSUFFICIENT_REMAINING_ACCOUNTS = 0x1b81; // 7041
/** MissingBroker: missing broker account */
export const TENSOR_MARKETPLACE_ERROR__MISSING_BROKER = 0x1b82; // 7042
/** MissingBrokerTokenAccount: missing broker token account */
export const TENSOR_MARKETPLACE_ERROR__MISSING_BROKER_TOKEN_ACCOUNT = 0x1b83; // 7043
/** InvalidTokenAccount: invalidtoken account */
export const TENSOR_MARKETPLACE_ERROR__INVALID_TOKEN_ACCOUNT = 0x1b84; // 7044

export type TensorMarketplaceError =
  | typeof TENSOR_MARKETPLACE_ERROR__ARITHMETIC_ERROR
  | typeof TENSOR_MARKETPLACE_ERROR__ASSET_ID_MISMATCH
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_BID_FIELD
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_COSIGNER
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_LIST_STATE
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_MARGIN
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_MINT_PROOF
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_OWNER
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_QUANTITY
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_RENT_DEST
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_ROYALTIES_PCT
  | typeof TENSOR_MARKETPLACE_ERROR__BAD_WHITELIST
  | typeof TENSOR_MARKETPLACE_ERROR__BID_BALANCE_NOT_EMPTIED
  | typeof TENSOR_MARKETPLACE_ERROR__BID_EXPIRED
  | typeof TENSOR_MARKETPLACE_ERROR__BID_FULLY_FILLED
  | typeof TENSOR_MARKETPLACE_ERROR__BID_NOT_YET_EXPIRED
  | typeof TENSOR_MARKETPLACE_ERROR__BROKER_MISMATCH
  | typeof TENSOR_MARKETPLACE_ERROR__CANNOT_MODIFY_TARGET
  | typeof TENSOR_MARKETPLACE_ERROR__CREATOR_MISMATCH
  | typeof TENSOR_MARKETPLACE_ERROR__CURRENCY_MISMATCH
  | typeof TENSOR_MARKETPLACE_ERROR__CURRENCY_NOT_YET_ENABLED
  | typeof TENSOR_MARKETPLACE_ERROR__CURRENCY_NOT_YET_WHITELISTED
  | typeof TENSOR_MARKETPLACE_ERROR__EXPIRY_TOO_LARGE
  | typeof TENSOR_MARKETPLACE_ERROR__FORBIDDEN_COLLECTION
  | typeof TENSOR_MARKETPLACE_ERROR__INSUFFICIENT_BALANCE
  | typeof TENSOR_MARKETPLACE_ERROR__INSUFFICIENT_REMAINING_ACCOUNTS
  | typeof TENSOR_MARKETPLACE_ERROR__INVALID_FEE_ACCOUNT
  | typeof TENSOR_MARKETPLACE_ERROR__INVALID_TOKEN_ACCOUNT
  | typeof TENSOR_MARKETPLACE_ERROR__LISTING_EXPIRED
  | typeof TENSOR_MARKETPLACE_ERROR__LISTING_NOT_YET_EXPIRED
  | typeof TENSOR_MARKETPLACE_ERROR__MAKER_BROKER_NOT_YET_ENABLED
  | typeof TENSOR_MARKETPLACE_ERROR__MAKER_BROKER_NOT_YET_WHITELISTED
  | typeof TENSOR_MARKETPLACE_ERROR__MISSING_BROKER
  | typeof TENSOR_MARKETPLACE_ERROR__MISSING_BROKER_TOKEN_ACCOUNT
  | typeof TENSOR_MARKETPLACE_ERROR__MISSING_COLLECTION
  | typeof TENSOR_MARKETPLACE_ERROR__MISSING_FVC
  | typeof TENSOR_MARKETPLACE_ERROR__OPTIONAL_ROYALTIES_NOT_YET_ENABLED
  | typeof TENSOR_MARKETPLACE_ERROR__PRICE_MISMATCH
  | typeof TENSOR_MARKETPLACE_ERROR__TAKER_NOT_ALLOWED
  | typeof TENSOR_MARKETPLACE_ERROR__TARGET_ID_MUST_EQUAL_BID_ID
  | typeof TENSOR_MARKETPLACE_ERROR__WRONG_BID_FIELD_ID
  | typeof TENSOR_MARKETPLACE_ERROR__WRONG_IX_FOR_BID_TARGET
  | typeof TENSOR_MARKETPLACE_ERROR__WRONG_STATE_VERSION
  | typeof TENSOR_MARKETPLACE_ERROR__WRONG_TARGET_ID
  | typeof TENSOR_MARKETPLACE_ERROR__WRONG_TOKEN_RECORD_DERIVATION;

let tensorMarketplaceErrorMessages:
  | Record<TensorMarketplaceError, string>
  | undefined;
if (__DEV__) {
  tensorMarketplaceErrorMessages = {
    [TENSOR_MARKETPLACE_ERROR__ARITHMETIC_ERROR]: `arithmetic error`,
    [TENSOR_MARKETPLACE_ERROR__ASSET_ID_MISMATCH]: `asset id mismatch`,
    [TENSOR_MARKETPLACE_ERROR__BAD_BID_FIELD]: `cannot pass bid field`,
    [TENSOR_MARKETPLACE_ERROR__BAD_COSIGNER]: `bad cosigner`,
    [TENSOR_MARKETPLACE_ERROR__BAD_LIST_STATE]: `bad list state`,
    [TENSOR_MARKETPLACE_ERROR__BAD_MARGIN]: `bad margin`,
    [TENSOR_MARKETPLACE_ERROR__BAD_MINT_PROOF]: `bad mint proof`,
    [TENSOR_MARKETPLACE_ERROR__BAD_OWNER]: `bad owner`,
    [TENSOR_MARKETPLACE_ERROR__BAD_QUANTITY]: `bad quantity passed in`,
    [TENSOR_MARKETPLACE_ERROR__BAD_RENT_DEST]: `Bad rent dest.`,
    [TENSOR_MARKETPLACE_ERROR__BAD_ROYALTIES_PCT]: `royalties pct must be between 0 and 100`,
    [TENSOR_MARKETPLACE_ERROR__BAD_WHITELIST]: `bad whitelist`,
    [TENSOR_MARKETPLACE_ERROR__BID_BALANCE_NOT_EMPTIED]: `The bid balance was not emptied`,
    [TENSOR_MARKETPLACE_ERROR__BID_EXPIRED]: `bid has expired`,
    [TENSOR_MARKETPLACE_ERROR__BID_FULLY_FILLED]: `bid fully filled`,
    [TENSOR_MARKETPLACE_ERROR__BID_NOT_YET_EXPIRED]: `bid not yet expired`,
    [TENSOR_MARKETPLACE_ERROR__BROKER_MISMATCH]: `broker mismatch`,
    [TENSOR_MARKETPLACE_ERROR__CANNOT_MODIFY_TARGET]: `cannot modify bid target, create a new bid`,
    [TENSOR_MARKETPLACE_ERROR__CREATOR_MISMATCH]: `creator mismatch`,
    [TENSOR_MARKETPLACE_ERROR__CURRENCY_MISMATCH]: `Currency mismatch`,
    [TENSOR_MARKETPLACE_ERROR__CURRENCY_NOT_YET_ENABLED]: `currency not yet enabled`,
    [TENSOR_MARKETPLACE_ERROR__CURRENCY_NOT_YET_WHITELISTED]: `currency not yet whitelisted`,
    [TENSOR_MARKETPLACE_ERROR__EXPIRY_TOO_LARGE]: `expiry too large`,
    [TENSOR_MARKETPLACE_ERROR__FORBIDDEN_COLLECTION]: `forbidden collection`,
    [TENSOR_MARKETPLACE_ERROR__INSUFFICIENT_BALANCE]: `insufficient balance`,
    [TENSOR_MARKETPLACE_ERROR__INSUFFICIENT_REMAINING_ACCOUNTS]: `insufficient remaining accounts`,
    [TENSOR_MARKETPLACE_ERROR__INVALID_FEE_ACCOUNT]: `invalid fee account`,
    [TENSOR_MARKETPLACE_ERROR__INVALID_TOKEN_ACCOUNT]: `invalidtoken account`,
    [TENSOR_MARKETPLACE_ERROR__LISTING_EXPIRED]: `listing has expired`,
    [TENSOR_MARKETPLACE_ERROR__LISTING_NOT_YET_EXPIRED]: `listing not yet expired`,
    [TENSOR_MARKETPLACE_ERROR__MAKER_BROKER_NOT_YET_ENABLED]: `maker broker not yet enabled`,
    [TENSOR_MARKETPLACE_ERROR__MAKER_BROKER_NOT_YET_WHITELISTED]: `maker broker not yet whitelisted`,
    [TENSOR_MARKETPLACE_ERROR__MISSING_BROKER]: `missing broker account`,
    [TENSOR_MARKETPLACE_ERROR__MISSING_BROKER_TOKEN_ACCOUNT]: `missing broker token account`,
    [TENSOR_MARKETPLACE_ERROR__MISSING_COLLECTION]: `metadata missing collection`,
    [TENSOR_MARKETPLACE_ERROR__MISSING_FVC]: `creator array missing first verified creator`,
    [TENSOR_MARKETPLACE_ERROR__OPTIONAL_ROYALTIES_NOT_YET_ENABLED]: `optional royalties not yet enabled`,
    [TENSOR_MARKETPLACE_ERROR__PRICE_MISMATCH]: `price mismatch`,
    [TENSOR_MARKETPLACE_ERROR__TAKER_NOT_ALLOWED]: `taker not allowed`,
    [TENSOR_MARKETPLACE_ERROR__TARGET_ID_MUST_EQUAL_BID_ID]: `target id and bid id must be the same for single bids`,
    [TENSOR_MARKETPLACE_ERROR__WRONG_BID_FIELD_ID]: `wrong field id`,
    [TENSOR_MARKETPLACE_ERROR__WRONG_IX_FOR_BID_TARGET]: `wrong ix for bid target called`,
    [TENSOR_MARKETPLACE_ERROR__WRONG_STATE_VERSION]: `wrong state version`,
    [TENSOR_MARKETPLACE_ERROR__WRONG_TARGET_ID]: `wrong target id`,
    [TENSOR_MARKETPLACE_ERROR__WRONG_TOKEN_RECORD_DERIVATION]: `token record derivation is wrong`,
  };
}

export function getTensorMarketplaceErrorMessage(
  code: TensorMarketplaceError
): string {
  if (__DEV__) {
    return (
      tensorMarketplaceErrorMessages as Record<TensorMarketplaceError, string>
    )[code];
  }

  return 'Error message not available in production bundles. Compile with `__DEV__` set to true to see more information.';
}
