/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Address } from '@solana/addresses';
import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  mapEncoder,
} from '@solana/codecs-core';
import {
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import { getU8Decoder, getU8Encoder } from '@solana/codecs-numbers';
import {
  AccountRole,
  IAccountMeta,
  IInstruction,
  IInstructionWithAccounts,
  IInstructionWithData,
  ReadonlyAccount,
  WritableAccount,
} from '@solana/instructions';
import {
  ResolvedAccount,
  accountMetaWithDefault,
  getAccountMetasWithSigners,
} from '../shared';

export type CloseExpiredListingCoreInstruction<
  TProgram extends string = 'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp',
  TAccountListState extends string | IAccountMeta<string> = string,
  TAccountAsset extends string | IAccountMeta<string> = string,
  TAccountCollection extends string | IAccountMeta<string> = string,
  TAccountOwner extends string | IAccountMeta<string> = string,
  TAccountMplCoreProgram extends string | IAccountMeta<string> = string,
  TAccountSystemProgram extends
    | string
    | IAccountMeta<string> = '11111111111111111111111111111111',
  TAccountMarketplaceProgram extends string | IAccountMeta<string> = string,
  TAccountRentDest extends
    | string
    | IAccountMeta<string> = 'SysvarRent111111111111111111111111111111111',
  TRemainingAccounts extends Array<IAccountMeta<string>> = []
> = IInstruction<TProgram> &
  IInstructionWithData<Uint8Array> &
  IInstructionWithAccounts<
    [
      TAccountListState extends string
        ? WritableAccount<TAccountListState>
        : TAccountListState,
      TAccountAsset extends string
        ? WritableAccount<TAccountAsset>
        : TAccountAsset,
      TAccountCollection extends string
        ? ReadonlyAccount<TAccountCollection>
        : TAccountCollection,
      TAccountOwner extends string
        ? ReadonlyAccount<TAccountOwner>
        : TAccountOwner,
      TAccountMplCoreProgram extends string
        ? ReadonlyAccount<TAccountMplCoreProgram>
        : TAccountMplCoreProgram,
      TAccountSystemProgram extends string
        ? ReadonlyAccount<TAccountSystemProgram>
        : TAccountSystemProgram,
      TAccountMarketplaceProgram extends string
        ? ReadonlyAccount<TAccountMarketplaceProgram>
        : TAccountMarketplaceProgram,
      TAccountRentDest extends string
        ? WritableAccount<TAccountRentDest>
        : TAccountRentDest,
      ...TRemainingAccounts
    ]
  >;

export type CloseExpiredListingCoreInstructionWithSigners<
  TProgram extends string = 'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp',
  TAccountListState extends string | IAccountMeta<string> = string,
  TAccountAsset extends string | IAccountMeta<string> = string,
  TAccountCollection extends string | IAccountMeta<string> = string,
  TAccountOwner extends string | IAccountMeta<string> = string,
  TAccountMplCoreProgram extends string | IAccountMeta<string> = string,
  TAccountSystemProgram extends
    | string
    | IAccountMeta<string> = '11111111111111111111111111111111',
  TAccountMarketplaceProgram extends string | IAccountMeta<string> = string,
  TAccountRentDest extends
    | string
    | IAccountMeta<string> = 'SysvarRent111111111111111111111111111111111',
  TRemainingAccounts extends Array<IAccountMeta<string>> = []
> = IInstruction<TProgram> &
  IInstructionWithData<Uint8Array> &
  IInstructionWithAccounts<
    [
      TAccountListState extends string
        ? WritableAccount<TAccountListState>
        : TAccountListState,
      TAccountAsset extends string
        ? WritableAccount<TAccountAsset>
        : TAccountAsset,
      TAccountCollection extends string
        ? ReadonlyAccount<TAccountCollection>
        : TAccountCollection,
      TAccountOwner extends string
        ? ReadonlyAccount<TAccountOwner>
        : TAccountOwner,
      TAccountMplCoreProgram extends string
        ? ReadonlyAccount<TAccountMplCoreProgram>
        : TAccountMplCoreProgram,
      TAccountSystemProgram extends string
        ? ReadonlyAccount<TAccountSystemProgram>
        : TAccountSystemProgram,
      TAccountMarketplaceProgram extends string
        ? ReadonlyAccount<TAccountMarketplaceProgram>
        : TAccountMarketplaceProgram,
      TAccountRentDest extends string
        ? WritableAccount<TAccountRentDest>
        : TAccountRentDest,
      ...TRemainingAccounts
    ]
  >;

export type CloseExpiredListingCoreInstructionData = {
  discriminator: Array<number>;
};

export type CloseExpiredListingCoreInstructionDataArgs = {};

export function getCloseExpiredListingCoreInstructionDataEncoder() {
  return mapEncoder(
    getStructEncoder<{ discriminator: Array<number> }>([
      ['discriminator', getArrayEncoder(getU8Encoder(), { size: 8 })],
    ]),
    (value) => ({ ...value, discriminator: [89, 171, 78, 80, 74, 188, 63, 58] })
  ) satisfies Encoder<CloseExpiredListingCoreInstructionDataArgs>;
}

export function getCloseExpiredListingCoreInstructionDataDecoder() {
  return getStructDecoder<CloseExpiredListingCoreInstructionData>([
    ['discriminator', getArrayDecoder(getU8Decoder(), { size: 8 })],
  ]) satisfies Decoder<CloseExpiredListingCoreInstructionData>;
}

export function getCloseExpiredListingCoreInstructionDataCodec(): Codec<
  CloseExpiredListingCoreInstructionDataArgs,
  CloseExpiredListingCoreInstructionData
> {
  return combineCodec(
    getCloseExpiredListingCoreInstructionDataEncoder(),
    getCloseExpiredListingCoreInstructionDataDecoder()
  );
}

export type CloseExpiredListingCoreInput<
  TAccountListState extends string,
  TAccountAsset extends string,
  TAccountCollection extends string,
  TAccountOwner extends string,
  TAccountMplCoreProgram extends string,
  TAccountSystemProgram extends string,
  TAccountMarketplaceProgram extends string,
  TAccountRentDest extends string
> = {
  listState: Address<TAccountListState>;
  asset: Address<TAccountAsset>;
  collection?: Address<TAccountCollection>;
  owner: Address<TAccountOwner>;
  mplCoreProgram: Address<TAccountMplCoreProgram>;
  systemProgram?: Address<TAccountSystemProgram>;
  marketplaceProgram: Address<TAccountMarketplaceProgram>;
  rentDest?: Address<TAccountRentDest>;
};

export type CloseExpiredListingCoreInputWithSigners<
  TAccountListState extends string,
  TAccountAsset extends string,
  TAccountCollection extends string,
  TAccountOwner extends string,
  TAccountMplCoreProgram extends string,
  TAccountSystemProgram extends string,
  TAccountMarketplaceProgram extends string,
  TAccountRentDest extends string
> = {
  listState: Address<TAccountListState>;
  asset: Address<TAccountAsset>;
  collection?: Address<TAccountCollection>;
  owner: Address<TAccountOwner>;
  mplCoreProgram: Address<TAccountMplCoreProgram>;
  systemProgram?: Address<TAccountSystemProgram>;
  marketplaceProgram: Address<TAccountMarketplaceProgram>;
  rentDest?: Address<TAccountRentDest>;
};

export function getCloseExpiredListingCoreInstruction<
  TAccountListState extends string,
  TAccountAsset extends string,
  TAccountCollection extends string,
  TAccountOwner extends string,
  TAccountMplCoreProgram extends string,
  TAccountSystemProgram extends string,
  TAccountMarketplaceProgram extends string,
  TAccountRentDest extends string,
  TProgram extends string = 'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp'
>(
  input: CloseExpiredListingCoreInputWithSigners<
    TAccountListState,
    TAccountAsset,
    TAccountCollection,
    TAccountOwner,
    TAccountMplCoreProgram,
    TAccountSystemProgram,
    TAccountMarketplaceProgram,
    TAccountRentDest
  >
): CloseExpiredListingCoreInstructionWithSigners<
  TProgram,
  TAccountListState,
  TAccountAsset,
  TAccountCollection,
  TAccountOwner,
  TAccountMplCoreProgram,
  TAccountSystemProgram,
  TAccountMarketplaceProgram,
  TAccountRentDest
>;
export function getCloseExpiredListingCoreInstruction<
  TAccountListState extends string,
  TAccountAsset extends string,
  TAccountCollection extends string,
  TAccountOwner extends string,
  TAccountMplCoreProgram extends string,
  TAccountSystemProgram extends string,
  TAccountMarketplaceProgram extends string,
  TAccountRentDest extends string,
  TProgram extends string = 'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp'
>(
  input: CloseExpiredListingCoreInput<
    TAccountListState,
    TAccountAsset,
    TAccountCollection,
    TAccountOwner,
    TAccountMplCoreProgram,
    TAccountSystemProgram,
    TAccountMarketplaceProgram,
    TAccountRentDest
  >
): CloseExpiredListingCoreInstruction<
  TProgram,
  TAccountListState,
  TAccountAsset,
  TAccountCollection,
  TAccountOwner,
  TAccountMplCoreProgram,
  TAccountSystemProgram,
  TAccountMarketplaceProgram,
  TAccountRentDest
>;
export function getCloseExpiredListingCoreInstruction<
  TAccountListState extends string,
  TAccountAsset extends string,
  TAccountCollection extends string,
  TAccountOwner extends string,
  TAccountMplCoreProgram extends string,
  TAccountSystemProgram extends string,
  TAccountMarketplaceProgram extends string,
  TAccountRentDest extends string,
  TProgram extends string = 'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp'
>(
  input: CloseExpiredListingCoreInput<
    TAccountListState,
    TAccountAsset,
    TAccountCollection,
    TAccountOwner,
    TAccountMplCoreProgram,
    TAccountSystemProgram,
    TAccountMarketplaceProgram,
    TAccountRentDest
  >
): IInstruction {
  // Program address.
  const programAddress =
    'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp' as Address<'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp'>;

  // Original accounts.
  type AccountMetas = Parameters<
    typeof getCloseExpiredListingCoreInstructionRaw<
      TProgram,
      TAccountListState,
      TAccountAsset,
      TAccountCollection,
      TAccountOwner,
      TAccountMplCoreProgram,
      TAccountSystemProgram,
      TAccountMarketplaceProgram,
      TAccountRentDest
    >
  >[0];
  const accounts: Record<keyof AccountMetas, ResolvedAccount> = {
    listState: { value: input.listState ?? null, isWritable: true },
    asset: { value: input.asset ?? null, isWritable: true },
    collection: { value: input.collection ?? null, isWritable: false },
    owner: { value: input.owner ?? null, isWritable: false },
    mplCoreProgram: { value: input.mplCoreProgram ?? null, isWritable: false },
    systemProgram: { value: input.systemProgram ?? null, isWritable: false },
    marketplaceProgram: {
      value: input.marketplaceProgram ?? null,
      isWritable: false,
    },
    rentDest: { value: input.rentDest ?? null, isWritable: true },
  };

  // Resolve default values.
  if (!accounts.systemProgram.value) {
    accounts.systemProgram.value =
      '11111111111111111111111111111111' as Address<'11111111111111111111111111111111'>;
  }
  if (!accounts.rentDest.value) {
    accounts.rentDest.value =
      'SysvarRent111111111111111111111111111111111' as Address<'SysvarRent111111111111111111111111111111111'>;
  }

  // Get account metas and signers.
  const accountMetas = getAccountMetasWithSigners(
    accounts,
    'programId',
    programAddress
  );

  const instruction = getCloseExpiredListingCoreInstructionRaw(
    accountMetas as Record<keyof AccountMetas, IAccountMeta>,
    programAddress
  );

  return instruction;
}

export function getCloseExpiredListingCoreInstructionRaw<
  TProgram extends string = 'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp',
  TAccountListState extends string | IAccountMeta<string> = string,
  TAccountAsset extends string | IAccountMeta<string> = string,
  TAccountCollection extends string | IAccountMeta<string> = string,
  TAccountOwner extends string | IAccountMeta<string> = string,
  TAccountMplCoreProgram extends string | IAccountMeta<string> = string,
  TAccountSystemProgram extends
    | string
    | IAccountMeta<string> = '11111111111111111111111111111111',
  TAccountMarketplaceProgram extends string | IAccountMeta<string> = string,
  TAccountRentDest extends
    | string
    | IAccountMeta<string> = 'SysvarRent111111111111111111111111111111111',
  TRemainingAccounts extends Array<IAccountMeta<string>> = []
>(
  accounts: {
    listState: TAccountListState extends string
      ? Address<TAccountListState>
      : TAccountListState;
    asset: TAccountAsset extends string
      ? Address<TAccountAsset>
      : TAccountAsset;
    collection?: TAccountCollection extends string
      ? Address<TAccountCollection>
      : TAccountCollection;
    owner: TAccountOwner extends string
      ? Address<TAccountOwner>
      : TAccountOwner;
    mplCoreProgram: TAccountMplCoreProgram extends string
      ? Address<TAccountMplCoreProgram>
      : TAccountMplCoreProgram;
    systemProgram?: TAccountSystemProgram extends string
      ? Address<TAccountSystemProgram>
      : TAccountSystemProgram;
    marketplaceProgram: TAccountMarketplaceProgram extends string
      ? Address<TAccountMarketplaceProgram>
      : TAccountMarketplaceProgram;
    rentDest?: TAccountRentDest extends string
      ? Address<TAccountRentDest>
      : TAccountRentDest;
  },
  programAddress: Address<TProgram> = 'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp' as Address<TProgram>,
  remainingAccounts?: TRemainingAccounts
) {
  return {
    accounts: [
      accountMetaWithDefault(accounts.listState, AccountRole.WRITABLE),
      accountMetaWithDefault(accounts.asset, AccountRole.WRITABLE),
      accountMetaWithDefault(
        accounts.collection ?? {
          address:
            'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp' as Address<'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp'>,
          role: AccountRole.READONLY,
        },
        AccountRole.READONLY
      ),
      accountMetaWithDefault(accounts.owner, AccountRole.READONLY),
      accountMetaWithDefault(accounts.mplCoreProgram, AccountRole.READONLY),
      accountMetaWithDefault(
        accounts.systemProgram ??
          ('11111111111111111111111111111111' as Address<'11111111111111111111111111111111'>),
        AccountRole.READONLY
      ),
      accountMetaWithDefault(accounts.marketplaceProgram, AccountRole.READONLY),
      accountMetaWithDefault(
        accounts.rentDest ??
          ('SysvarRent111111111111111111111111111111111' as Address<'SysvarRent111111111111111111111111111111111'>),
        AccountRole.WRITABLE
      ),
      ...(remainingAccounts ?? []),
    ],
    data: getCloseExpiredListingCoreInstructionDataEncoder().encode({}),
    programAddress,
  } as CloseExpiredListingCoreInstruction<
    TProgram,
    TAccountListState,
    TAccountAsset,
    TAccountCollection,
    TAccountOwner,
    TAccountMplCoreProgram,
    TAccountSystemProgram,
    TAccountMarketplaceProgram,
    TAccountRentDest,
    TRemainingAccounts
  >;
}

export type ParsedCloseExpiredListingCoreInstruction<
  TProgram extends string = 'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp',
  TAccountMetas extends readonly IAccountMeta[] = readonly IAccountMeta[]
> = {
  programAddress: Address<TProgram>;
  accounts: {
    listState: TAccountMetas[0];
    asset: TAccountMetas[1];
    collection?: TAccountMetas[2] | undefined;
    owner: TAccountMetas[3];
    mplCoreProgram: TAccountMetas[4];
    systemProgram: TAccountMetas[5];
    marketplaceProgram: TAccountMetas[6];
    rentDest: TAccountMetas[7];
  };
  data: CloseExpiredListingCoreInstructionData;
};

export function parseCloseExpiredListingCoreInstruction<
  TProgram extends string,
  TAccountMetas extends readonly IAccountMeta[]
>(
  instruction: IInstruction<TProgram> &
    IInstructionWithAccounts<TAccountMetas> &
    IInstructionWithData<Uint8Array>
): ParsedCloseExpiredListingCoreInstruction<TProgram, TAccountMetas> {
  if (instruction.accounts.length < 8) {
    // TODO: Coded error.
    throw new Error('Not enough accounts');
  }
  let accountIndex = 0;
  const getNextAccount = () => {
    const accountMeta = instruction.accounts![accountIndex]!;
    accountIndex += 1;
    return accountMeta;
  };
  const getNextOptionalAccount = () => {
    const accountMeta = getNextAccount();
    return accountMeta.address === 'TCMPhJdwDryooaGtiocG1u3xcYbRpiJzb283XfCZsDp'
      ? undefined
      : accountMeta;
  };
  return {
    programAddress: instruction.programAddress,
    accounts: {
      listState: getNextAccount(),
      asset: getNextAccount(),
      collection: getNextOptionalAccount(),
      owner: getNextAccount(),
      mplCoreProgram: getNextAccount(),
      systemProgram: getNextAccount(),
      marketplaceProgram: getNextAccount(),
      rentDest: getNextAccount(),
    },
    data: getCloseExpiredListingCoreInstructionDataDecoder().decode(
      instruction.data
    ),
  };
}
