/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
} from '@solana/codecs';

export type SeedsVecLocal = {
  /** The vector of derivation seeds. */
  seeds: Array<Uint8Array>;
};

export type SeedsVecLocalArgs = SeedsVecLocal;

export function getSeedsVecLocalEncoder(): Encoder<SeedsVecLocalArgs> {
  return getStructEncoder([
    ['seeds', getArrayEncoder(getBytesEncoder({ size: getU32Encoder() }))],
  ]);
}

export function getSeedsVecLocalDecoder(): Decoder<SeedsVecLocal> {
  return getStructDecoder([
    ['seeds', getArrayDecoder(getBytesDecoder({ size: getU32Decoder() }))],
  ]);
}

export function getSeedsVecLocalCodec(): Codec<
  SeedsVecLocalArgs,
  SeedsVecLocal
> {
  return combineCodec(getSeedsVecLocalEncoder(), getSeedsVecLocalDecoder());
}
