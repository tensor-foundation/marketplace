name: Publish JS Client

on:
  workflow_dispatch:
    inputs:
      tag:
        description: NPM Tag
        required: true
        type: string
        default: latest
      dry_run:
        description: Dry run
        required: true
        type: boolean
        default: true

env:
  CACHE: true

jobs:
  build_verify_programs:
    name: Programs
    if: github.ref == 'refs/heads/main' || inputs.dry_run == true
    uses: ./.github/workflows/build-verify-programs.yml
    secrets: inherit

  test_js:
    name: JS client
    if: github.ref == 'refs/heads/main' || inputs.dry_run == true
    needs: build_verify_programs
    uses: ./.github/workflows/test-js-client.yml
    secrets: inherit

  publish_js:
    name: JS client / Publish
    if: github.ref == 'refs/heads/main' || inputs.dry_run == true
    runs-on: ubuntu-latest
    needs: test_js
    permissions:
      contents: write
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Load environment variables
        run: cat .github/.env >> $GITHUB_ENV

      - name: Install Node.js
        uses: tensor-foundation/actions/install-node-with-pnpm@v2
        with:
          version: ${{ env.NODE_VERSION }}
          cache: ${{ env.CACHE }}

      - name: Install dependencies
        uses: tensor-foundation/actions/install-node-dependencies@v2
        with:
          folder: ./clients/js
          cache: ${{ env.CACHE }}
          key: clients-js

      - name: Build
        working-directory: ./clients/js
        run: pnpm build
        
      - name: Get version
        id: get_version
        working-directory: ./clients/js
        run: echo "version=$(pnpm pkg get version | sed 's/"//g')" >> $GITHUB_OUTPUT

      - name: Set publishing config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish
        working-directory: ./clients/js
        run: pnpm publish --no-git-checks --tag ${{ inputs.tag }} ${{ inputs.dry_run && '--dry-run' || '' }}